<%- include('../includes/head.ejs') %>

<div id="map"></div>
<script src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
<script src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
<script src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
<script src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>
<script>

   var depart = 'geo!' + '<%= lgtd  %>' + ',' + '<%= latd %>';  //var test is now assigned to getTest which will only work on browsers
   var fin = 'geo!' + '<%= lgtd1  %>' + ',' + '<%= latd1 %>';  //var test is now assigned to getTest which will only work on browsers
   console.log(depart);
   //Script de mise en place des Routes
   const platform = new H.service.Platform({ apikey: 'Clé API du service HERE MAP' });
   const defaultLayers = platform.createDefaultLayers();
   const map = new H.Map(document.getElementById('map'),
      defaultLayers.vector.normal.map, {
      center: { lat: 37.773972, lng: -122.431297 },
      zoom: 13,
      pixelRatio: window.devicePixelRatio || 1
   });
   window.addEventListener('resize', () => map.getViewPort().resize());
   const behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));
   const ui = H.ui.UI.createDefault(map, defaultLayers);

   //On peut contenir nos points dans des variables, maintenant il faut que j'arrive à enregistrer mes points dans ma bdd
   //Ensuite il faut que je les charge dans mes variables.
   const departure = 'geo!47.192851,5.783364';
   const finish = 'geo!47.190285,5.837094';
   //Begin routing
   //Configure transportation mode, start, end points
   const request = {
      mode: 'fastest;car',
      waypoint0: depart,
      waypoint1: fin,
      representation: 'display'
   };
   //Initialize routing service
   const router = platform.getRoutingService();
   router.calculateRoute(request, response => {
      //Parse the route's shape
      const shape = response.response.route[0].shape.map(x => x.split(','));
      const linestring = new H.geo.LineString();
      shape.forEach(s => linestring.pushLatLngAlt(s[0], s[1]));
      //Create a polyline with the shape
      const routeLine = new H.map.Polyline(linestring, {
         style: { strokeColor: 'blue', lineWidth: 3 }
      });
      //Add route to map
      map.addObject(routeLine);
      //Zoom to bounds of the route shape
      map.getViewModel().setLookAtData({ bounds: routeLine.getBoundingBox() });
   });
</script>
<%- include('../includes/footer.ejs') %>